// Generated by LiveScript 1.2.0
(function(){
  var expect, index, Normalizer;
  require('../test_setup');
  expect = require('chai').expect;
  index = require('../../');
  Normalizer = index.util.Normalizer;
  describe('Normalizer', function(){
    var normalizer, args, normalizedArgs;
    before(function(){
      return normalizedArgs = {
        user: 'a',
        action: 'b',
        subject: 'c'
      };
    });
    describe.only('initialize(@args)', function(){
      return context('with object', function(){
        before(function(){
          args = {
            user: 'a',
            action: 'b',
            subject: 'c'
          };
          return normalizer = new Normalizer(args);
        });
        specify.only('sets args as Object', function(){
          return expect(normalizer.args).to.eql([args]);
        });
        describe('object', function(){
          return specify('returns args', function(){
            return expect(normalizer.object()).to.eql(args);
          });
        });
        return describe('normalized', function(){
          return specify('normalized args', function(){
            return expect(normalizer.normalized()).to.eql(normalizedArgs);
          });
        });
      });
    });
    describe('initialize(@args)', function(){
      return context('with object in array', function(){
        before(function(){
          args = {
            user: 'a',
            action: 'b',
            subject: 'c'
          };
          return normalizer = new Normalizer([args]);
        });
        specify('sets args as Object', function(){
          return normalizer.args.should.eql([args]);
        });
        describe('object', function(){
          return specify('array args', function(){
            return normalizer.object().should.eql(args);
          });
        });
        return describe('normalized', function(){
          return specify('normalized args', function(){
            return function(){
              return normalizer.normalized().should.eql(normalizedArgs);
            };
          });
        });
      });
    });
    describe('initialize(@args)', function(){
      context('with array', function(){
        before(function(){
          args = ['a', 'b', 'c'];
          normalizer = new Normalizer(args);
          return normalizedArgs = {
            action: 'a',
            subject: 'b',
            ctx: 'c'
          };
        });
        specify('sets args as array', function(){
          return normalizer.args.should.eql(args);
        });
        describe('normalized', function(){
          return specify('normalized args', function(){
            return normalizer.normalized().should.eql(normalizedArgs);
          });
        });
        describe('create-object', function(){
          return specify('extends incl ctx', function(){
            return normalizer.createObject().should.eql(normalizedArgs);
          });
        });
        return describe('base-obj', function(){
          return specify('base hash excl ctx', function(){
            return normalizer.baseObj().should.eql({
              action: 'a',
              subject: 'b'
            });
          });
        });
      });
      context('with user', function(){
        return before(function(){
          args = ['a', 'b', 'c'];
          normalizer = new Normalizer(args).setUser('user');
          return normalizedArgs = {
            user: 'user',
            action: 'a',
            subject: 'b',
            ctx: 'c'
          };
        });
      });
      return describe('normalized', function(){
        return specify('normalized args', function(){
          return normalizer.normalized().should.eql(normalizedArgs);
        });
      });
    });
    return describe('initialize(@args)', function(){
      context('with mixed array', function(){
        return before(function(){
          args = [
            'write', {
              obj: {
                title: 'hello'
              },
              title: 'hello'
            }
          ];
          normalizer = new Normalizer(args).setUser('user');
          return normalizedArgs = {
            user: 'user',
            action: 'write',
            subject: {
              obj: {
                title: 'hello'
              },
              title: 'hello'
            }
          };
        });
      });
      return describe('normalized', function(){
        return specify('normalized args', function(){
          return normalizer.normalized().should.eql(normalizedArgs);
        });
      });
    });
  });
}).call(this);
